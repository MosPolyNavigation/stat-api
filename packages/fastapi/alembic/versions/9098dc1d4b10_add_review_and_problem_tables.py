"""Add review and problem tables

Revision ID: 9098dc1d4b10
Revises: 3bce90c96a6a
Create Date: 2025-03-24 12:31:57.493891

"""
from typing import Sequence, Union
from app.helpers.data import problems

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '9098dc1d4b10'
down_revision: Union[str, None] = '3bce90c96a6a'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None

def data_upgrades():
    problem = sa.sql.table("problems", sa.sql.column('id', sa.String))

    op.bulk_insert(problem, list(map(lambda x: {'id': x}, list(set(problems.split('\n'))))))


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('problems',
    sa.Column('id', sa.String(length=5), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_problems_id'), 'problems', ['id'], unique=False)
    op.create_table('reviews',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.String(length=36), nullable=False),
    sa.Column('text', sa.Text(), nullable=False),
    sa.Column('problem_id', sa.String(length=5), nullable=False),
    sa.Column('image_name', sa.String(length=255), nullable=True),
    sa.Column('creation_date', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['problem_id'], ['problems.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user_ids.user_id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_reviews_id'), 'reviews', ['id'], unique=False)
    data_upgrades()
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_reviews_id'), table_name='reviews')
    op.drop_table('reviews')
    op.drop_index(op.f('ix_problems_id'), table_name='problems')
    op.drop_table('problems')
    # ### end Alembic commands ###
